name: GitHub-Actions

on:
  push: 
    branches: 
      - CICD-test
    tags:
      - "v*.*.*"
      
jobs:
  build:
    runs-on: windows-2019
    
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    steps:
    - uses: paulhatch/semantic-version@v5.0.2
      with:
        # The prefix to use to identify tags
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "(MAJOR)"
        # A string which indicates the flags used by the `major_pattern` regular expression. Supported flags: idgs
        major_regexp_flags: ""
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
        # A string which indicates the flags used by the `minor_pattern` regular expression. Supported flags: idgs
        minor_regexp_flags: ""
        # A string to determine the format of the version output
        version_format: "${major}.${minor}.${patch}-prerelease${increment}"
        # Optional path to check for changes. If any changes are detected in the path the
        # 'changed' output will true. Enter multiple paths separated by spaces.
        change_path: "src/my-service"
        # Named version, will be used as suffix for name version tag
        namespace: my-service
        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: true
        # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
        search_commit_body: false
        # The output method used to generate list of users, 'csv' or 'json'.
        user_format_type: "csv"
        # Prevents pre-v1.0.0 version from automatically incrementing the major version.
        # If enabled, when the major version is 0, major releases will be treated as minor and minor as patch. Note that the version_type output is unchanged.
        enable_prerelease_mode: false
        
#       - name: Bump version and push tag
#         id: tag_version
#         uses: mathieudutour/github-tag-action@v6.1
#         with: 
#           github_token: ${{ secrets.GITHUB_TOKEN }}
# #           release_type: patch
        
#       - name: Create a GitHub release
#         uses: ncipollo/release-action@v1
#         with:
#           tag: v10.1.2
# #           tag: ${{ steps.tag_version.outputs.new_tag }}
#           name: Release v10.1.2
# #           name: Release ${{ steps.tag_version.outputs.new_tag }}
#           body: ${{ steps.tag_version.outputs.changelog }}
# #           append_to_pre_release_tag: 'allowUpdates'

#       - name: Install Conan
#         id: conan
#         uses: turtlebrowser/get-conan@main

#       - name: Check Conan version
#         run: conan --version

#       - name: Prebuild thirdparty
#         run: py .ci/prebuild_thirdparty.py --build-release

#       - name: Build
#         run: conan build . --build-folder build_

#       - name: Test
#         run: ./build_/bin/Life.exe
